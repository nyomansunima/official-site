---
type Link = {
  label: string
  href: string
}

const links: Link[] = [
  { label: "Works", href: "/works" },
  { label: "Collabs", href: "/collabs" },
  { label: "Crafts", href: "/crafts" },
  { label: "Stories", href: "/stories" },
  { label: "Journeys", href: "/journeys" },
  { label: "Resources", href: "/resources" },
  { label: "About", href: "/about" },
  { label: "Contact", href: "/contact" },
  { label: "Support", href: "/support" },
]
---

<div class="flex relative" id="main-menu-wrapper" transition:persist>
  <button
    class="flex justify-center items-center cursor-pointer group relative h-10 w-10"
    id="trigger"
  >
    <span
      class="h-10 w-10 flex justify-center items-center border-2 border-border border-dashed absolute rounded-2xl text-sm bg-surface transition-all duration-300 -translate-x-1 -rotate-6 group-hover:-rotate-12 group-hover:-translate-x-2 group-hover:border-link"
    ></span>
    <span
      class="h-10 w-10 flex justify-center items-center border-2 border-border border-dashed absolute rounded-2xl text-sm bg-surface transition-all duration-300 translate-x-1 rotate-6 group-hover:rotate-12 group-hover:translate-x-2 group-hover:border-link"
    ></span>
    <span
      class="h-10 w-10 flex justify-center items-center border-2 border-border border-dashed absolute rounded-2xl text-sm bg-surface transition-all duration-300 group-hover:translate-y-2 group-hover:border-link"
    >
      <i class="fi text-xs fi-br-flame"></i>
    </span>
  </button>

  <div
    class="hidden absolute z-20 bg-surface rounded-2xl w-72 p-1 top-11 right-0 origin-center transition-all duration-300 group"
    id="menu"
  >
    <div
      class="border-2 border-border border-dashed p-5 rounded-xl h-full w-full transition-all duration-300 group-hover:border-link"
    >
      <ul class="grid grid-cols-2 w-full gap-x-4 gap-y-4">
        {
          links.map(({ href, label }) => (
            <li class="flex w-full col-span-1">
              <a
                href={href}
                class="flex justify-center items-center text-sm transition-all duration-300 text-foreground hover:-translate-x-1 hover:text-link"
              >
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>

<script>
  const trigger = document.querySelector("#main-menu-wrapper #trigger")
  const menu = document.querySelector("#main-menu-wrapper #menu")

  if (trigger && menu) {
    trigger.addEventListener("click", () => {
      menu.classList.toggle("hidden")
    })

    // handle outside event (click)
    // will close modal when outside click
    document.addEventListener("click", (e) => {
      if (
        !menu.classList.contains("hidden") &&
        !trigger.contains(e.target as Element) &&
        !menu.contains(e.target as Element)
      ) {
        menu.classList.add("hidden")
      }
    })

    document.addEventListener("keydown", (e) => {
      if (e.key == "Escape" && !menu.classList.contains("hidden")) {
        menu.classList.add("hidden")
      }
    })

    document.removeEventListener("click", () => {})
    document.removeEventListener("keydown", () => {})
  }
</script>
